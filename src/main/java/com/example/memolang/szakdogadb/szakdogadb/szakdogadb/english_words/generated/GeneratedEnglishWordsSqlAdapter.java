package com.example.memolang.szakdogadb.szakdogadb.szakdogadb.english_words.generated;

import com.example.memolang.szakdogadb.szakdogadb.szakdogadb.english_words.EnglishWords;
import com.example.memolang.szakdogadb.szakdogadb.szakdogadb.english_words.EnglishWordsImpl;
import com.speedment.common.annotation.GeneratedCode;
import com.speedment.runtime.config.identifier.TableIdentifier;
import com.speedment.runtime.core.component.SqlAdapter;
import com.speedment.runtime.core.db.SqlFunction;

import java.sql.ResultSet;
import java.sql.SQLException;

import static com.speedment.common.injector.State.RESOLVED;

/**
 * The generated Sql Adapter for a {@link
 * com.example.memolang.szakdogadb.szakdogadb.szakdogadb.english_words.EnglishWords}
 * entity.
 * <p>
 * This file has been automatically generated by Speedment. Any changes made to
 * it will be overwritten.
 * 
 * @author Speedment
 */
@GeneratedCode("Speedment")
public abstract class GeneratedEnglishWordsSqlAdapter implements SqlAdapter<EnglishWords> {
    
    private final TableIdentifier<EnglishWords> tableIdentifier;
    
    protected GeneratedEnglishWordsSqlAdapter() {
        this.tableIdentifier = TableIdentifier.of("szakdogadb", "szakdogadb", "english_words");
    }
    
    protected EnglishWords apply(ResultSet resultSet, int offset) throws SQLException {
        return createEntity()
            .setEnglishWordId( resultSet.getInt(1 + offset))
            .setEnglishWord(   resultSet.getString(2 + offset))
            .setInSpeech(      resultSet.getString(3 + offset))
            .setInWriting(     resultSet.getString(4 + offset))
            .setPartOfSpeech(  resultSet.getString(5 + offset))
            ;
    }
    
    protected EnglishWordsImpl createEntity() {
        return new EnglishWordsImpl();
    }
    
    @Override
    public TableIdentifier<EnglishWords> identifier() {
        return tableIdentifier;
    }
    
    @Override
    public SqlFunction<ResultSet, EnglishWords> entityMapper() {
        return entityMapper(0);
    }
    
    @Override
    public SqlFunction<ResultSet, EnglishWords> entityMapper(int offset) {
        return rs -> apply(rs, offset);
    }
}