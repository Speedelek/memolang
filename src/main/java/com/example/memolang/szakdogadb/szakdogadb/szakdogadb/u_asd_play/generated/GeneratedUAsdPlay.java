package com.example.memolang.szakdogadb.szakdogadb.szakdogadb.u_asd_play.generated;

import com.example.memolang.szakdogadb.szakdogadb.szakdogadb.u_asd_play.UAsdPlay;
import com.speedment.common.annotation.GeneratedCode;
import com.speedment.runtime.config.identifier.ColumnIdentifier;
import com.speedment.runtime.config.identifier.TableIdentifier;
import com.speedment.runtime.field.IntField;
import com.speedment.runtime.typemapper.TypeMapper;

/**
 * The generated base for the {@link
 * com.example.memolang.szakdogadb.szakdogadb.szakdogadb.u_asd_play.UAsdPlay}-interface
 * representing entities of the {@code u_asd_play}-table in the database.
 * <p>
 * This file has been automatically generated by Speedment. Any changes made to
 * it will be overwritten.
 * 
 * @author Speedment
 */
@GeneratedCode("Speedment")
public interface GeneratedUAsdPlay {
    
    /**
     * This Field corresponds to the {@link UAsdPlay} field that can be obtained
     * using the {@link UAsdPlay#getQuestionedWordId()} method.
     */
    IntField<UAsdPlay, Integer> QUESTIONED_WORD_ID = IntField.create(
        Identifier.QUESTIONED_WORD_ID,
        UAsdPlay::getQuestionedWordId,
        UAsdPlay::setQuestionedWordId,
        TypeMapper.primitive(),
        true
    );
    /**
     * This Field corresponds to the {@link UAsdPlay} field that can be obtained
     * using the {@link UAsdPlay#getQuestionedWord()} method.
     */
    IntField<UAsdPlay, Integer> QUESTIONED_WORD = IntField.create(
        Identifier.QUESTIONED_WORD,
        UAsdPlay::getQuestionedWord,
        UAsdPlay::setQuestionedWord,
        TypeMapper.primitive(),
        false
    );
    /**
     * This Field corresponds to the {@link UAsdPlay} field that can be obtained
     * using the {@link UAsdPlay#getResult()} method.
     */
    IntField<UAsdPlay, Integer> RESULT = IntField.create(
        Identifier.RESULT,
        UAsdPlay::getResult,
        UAsdPlay::setResult,
        TypeMapper.primitive(),
        false
    );
    
    /**
     * Returns the questionedWordId of this UAsdPlay. The questionedWordId field
     * corresponds to the database column
     * szakdogadb.szakdogadb.u_asd_play.questioned_word_id.
     * 
     * @return the questionedWordId of this UAsdPlay
     */
    int getQuestionedWordId();
    
    /**
     * Returns the questionedWord of this UAsdPlay. The questionedWord field
     * corresponds to the database column
     * szakdogadb.szakdogadb.u_asd_play.questioned_word.
     * 
     * @return the questionedWord of this UAsdPlay
     */
    int getQuestionedWord();
    
    /**
     * Returns the result of this UAsdPlay. The result field corresponds to the
     * database column szakdogadb.szakdogadb.u_asd_play.result.
     * 
     * @return the result of this UAsdPlay
     */
    int getResult();
    
    /**
     * Sets the questionedWordId of this UAsdPlay. The questionedWordId field
     * corresponds to the database column
     * szakdogadb.szakdogadb.u_asd_play.questioned_word_id.
     * 
     * @param questionedWordId to set of this UAsdPlay
     * @return                 this UAsdPlay instance
     */
    UAsdPlay setQuestionedWordId(int questionedWordId);
    
    /**
     * Sets the questionedWord of this UAsdPlay. The questionedWord field
     * corresponds to the database column
     * szakdogadb.szakdogadb.u_asd_play.questioned_word.
     * 
     * @param questionedWord to set of this UAsdPlay
     * @return               this UAsdPlay instance
     */
    UAsdPlay setQuestionedWord(int questionedWord);
    
    /**
     * Sets the result of this UAsdPlay. The result field corresponds to the
     * database column szakdogadb.szakdogadb.u_asd_play.result.
     * 
     * @param result to set of this UAsdPlay
     * @return       this UAsdPlay instance
     */
    UAsdPlay setResult(int result);
    
    enum Identifier implements ColumnIdentifier<UAsdPlay> {
        
        QUESTIONED_WORD_ID ("questioned_word_id"),
        QUESTIONED_WORD    ("questioned_word"),
        RESULT             ("result");
        
        private final String columnId;
        private final TableIdentifier<UAsdPlay> tableIdentifier;
        
        Identifier(String columnId) {
            this.columnId        = columnId;
            this.tableIdentifier = TableIdentifier.of(    getDbmsId(), 
                getSchemaId(), 
                getTableId());
        }
        
        @Override
        public String getDbmsId() {
            return "szakdogadb";
        }
        
        @Override
        public String getSchemaId() {
            return "szakdogadb";
        }
        
        @Override
        public String getTableId() {
            return "u_asd_play";
        }
        
        @Override
        public String getColumnId() {
            return this.columnId;
        }
        
        @Override
        public TableIdentifier<UAsdPlay> asTableIdentifier() {
            return this.tableIdentifier;
        }
    }
}