package com.example.memolang.szakdogadb.szakdogadb.szakdogadb.u_asd_play.generated;

import com.example.memolang.szakdogadb.szakdogadb.szakdogadb.u_asd_play.UAsdPlay;
import com.speedment.common.annotation.GeneratedCode;

import java.util.Objects;
import java.util.StringJoiner;

/**
 * The generated base implementation of the {@link
 * com.example.memolang.szakdogadb.szakdogadb.szakdogadb.u_asd_play.UAsdPlay}-interface.
 * <p>
 * This file has been automatically generated by Speedment. Any changes made to
 * it will be overwritten.
 * 
 * @author Speedment
 */
@GeneratedCode("Speedment")
public abstract class GeneratedUAsdPlayImpl implements UAsdPlay {
    
    private int questionedWordId;
    private int questionedWord;
    private int result;
    
    protected GeneratedUAsdPlayImpl() {}
    
    @Override
    public int getQuestionedWordId() {
        return questionedWordId;
    }
    
    @Override
    public int getQuestionedWord() {
        return questionedWord;
    }
    
    @Override
    public int getResult() {
        return result;
    }
    
    @Override
    public UAsdPlay setQuestionedWordId(int questionedWordId) {
        this.questionedWordId = questionedWordId;
        return this;
    }
    
    @Override
    public UAsdPlay setQuestionedWord(int questionedWord) {
        this.questionedWord = questionedWord;
        return this;
    }
    
    @Override
    public UAsdPlay setResult(int result) {
        this.result = result;
        return this;
    }
    
    @Override
    public String toString() {
        final StringJoiner sj = new StringJoiner(", ", "{ ", " }");
        sj.add("questionedWordId = " + Objects.toString(getQuestionedWordId()));
        sj.add("questionedWord = "   + Objects.toString(getQuestionedWord()));
        sj.add("result = "           + Objects.toString(getResult()));
        return "UAsdPlayImpl " + sj.toString();
    }
    
    @Override
    public boolean equals(Object that) {
        if (this == that) { return true; }
        if (!(that instanceof UAsdPlay)) { return false; }
        final UAsdPlay thatUAsdPlay = (UAsdPlay)that;
        if (this.getQuestionedWordId() != thatUAsdPlay.getQuestionedWordId()) { return false; }
        if (this.getQuestionedWord() != thatUAsdPlay.getQuestionedWord()) { return false; }
        if (this.getResult() != thatUAsdPlay.getResult()) { return false; }
        return true;
    }
    
    @Override
    public int hashCode() {
        int hash = 7;
        hash = 31 * hash + Integer.hashCode(getQuestionedWordId());
        hash = 31 * hash + Integer.hashCode(getQuestionedWord());
        hash = 31 * hash + Integer.hashCode(getResult());
        return hash;
    }
}