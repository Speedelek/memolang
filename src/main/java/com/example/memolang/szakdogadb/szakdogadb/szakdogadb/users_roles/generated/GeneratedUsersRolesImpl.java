package com.example.memolang.szakdogadb.szakdogadb.szakdogadb.users_roles.generated;

import com.example.memolang.szakdogadb.szakdogadb.szakdogadb.roles.Roles;
import com.example.memolang.szakdogadb.szakdogadb.szakdogadb.users.Users;
import com.example.memolang.szakdogadb.szakdogadb.szakdogadb.users_roles.UsersRoles;
import com.speedment.common.annotation.GeneratedCode;
import com.speedment.runtime.core.manager.Manager;

import java.util.Objects;
import java.util.StringJoiner;

/**
 * The generated base implementation of the {@link
 * com.example.memolang.szakdogadb.szakdogadb.szakdogadb.users_roles.UsersRoles}-interface.
 * <p>
 * This file has been automatically generated by Speedment. Any changes made to
 * it will be overwritten.
 * 
 * @author Speedment
 */
@GeneratedCode("Speedment")
public abstract class GeneratedUsersRolesImpl implements UsersRoles {
    
    private long userId;
    private long roleId;
    
    protected GeneratedUsersRolesImpl() {}
    
    @Override
    public long getUserId() {
        return userId;
    }
    
    @Override
    public long getRoleId() {
        return roleId;
    }
    
    @Override
    public UsersRoles setUserId(long userId) {
        this.userId = userId;
        return this;
    }
    
    @Override
    public UsersRoles setRoleId(long roleId) {
        this.roleId = roleId;
        return this;
    }
    
    @Override
    public Users findUserId(Manager<Users> foreignManager) {
        return foreignManager.stream().filter(Users.ID.equal(getUserId())).findAny().orElse(null);
    }
    
    @Override
    public Roles findRoleId(Manager<Roles> foreignManager) {
        return foreignManager.stream().filter(Roles.ID.equal(getRoleId())).findAny().orElse(null);
    }
    
    @Override
    public String toString() {
        final StringJoiner sj = new StringJoiner(", ", "{ ", " }");
        sj.add("userId = " + Objects.toString(getUserId()));
        sj.add("roleId = " + Objects.toString(getRoleId()));
        return "UsersRolesImpl " + sj.toString();
    }
    
    @Override
    public boolean equals(Object that) {
        if (this == that) { return true; }
        if (!(that instanceof UsersRoles)) { return false; }
        final UsersRoles thatUsersRoles = (UsersRoles)that;
        if (this.getUserId() != thatUsersRoles.getUserId()) { return false; }
        if (this.getRoleId() != thatUsersRoles.getRoleId()) { return false; }
        return true;
    }
    
    @Override
    public int hashCode() {
        int hash = 7;
        hash = 31 * hash + Long.hashCode(getUserId());
        hash = 31 * hash + Long.hashCode(getRoleId());
        return hash;
    }
}