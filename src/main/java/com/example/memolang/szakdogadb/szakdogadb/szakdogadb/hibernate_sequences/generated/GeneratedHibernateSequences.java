package com.example.memolang.szakdogadb.szakdogadb.szakdogadb.hibernate_sequences.generated;

import com.example.memolang.szakdogadb.szakdogadb.szakdogadb.hibernate_sequences.HibernateSequences;
import com.speedment.common.annotation.GeneratedCode;
import com.speedment.runtime.config.identifier.ColumnIdentifier;
import com.speedment.runtime.config.identifier.TableIdentifier;
import com.speedment.runtime.core.util.OptionalUtil;
import com.speedment.runtime.field.ComparableField;
import com.speedment.runtime.field.StringField;
import com.speedment.runtime.typemapper.TypeMapper;

import java.util.OptionalLong;

/**
 * The generated base for the {@link
 * com.example.memolang.szakdogadb.szakdogadb.szakdogadb.hibernate_sequences.HibernateSequences}-interface
 * representing entities of the {@code hibernate_sequences}-table in the
 * database.
 * <p>
 * This file has been automatically generated by Speedment. Any changes made to
 * it will be overwritten.
 * 
 * @author Speedment
 */
@GeneratedCode("Speedment")
public interface GeneratedHibernateSequences {
    
    /**
     * This Field corresponds to the {@link HibernateSequences} field that can
     * be obtained using the {@link HibernateSequences#getSequenceName()}
     * method.
     */
    StringField<HibernateSequences, String> SEQUENCE_NAME = StringField.create(
        Identifier.SEQUENCE_NAME,
        HibernateSequences::getSequenceName,
        HibernateSequences::setSequenceName,
        TypeMapper.identity(),
        true
    );
    /**
     * This Field corresponds to the {@link HibernateSequences} field that can
     * be obtained using the {@link HibernateSequences#getNextVal()} method.
     */
    ComparableField<HibernateSequences, Long, Long> NEXT_VAL = ComparableField.create(
        Identifier.NEXT_VAL,
        o -> OptionalUtil.unwrap(o.getNextVal()),
        HibernateSequences::setNextVal,
        TypeMapper.identity(),
        false
    );
    
    /**
     * Returns the sequenceName of this HibernateSequences. The sequenceName
     * field corresponds to the database column
     * szakdogadb.szakdogadb.hibernate_sequences.sequence_name.
     * 
     * @return the sequenceName of this HibernateSequences
     */
    String getSequenceName();
    
    /**
     * Returns the nextVal of this HibernateSequences. The nextVal field
     * corresponds to the database column
     * szakdogadb.szakdogadb.hibernate_sequences.next_val.
     * 
     * @return the nextVal of this HibernateSequences
     */
    OptionalLong getNextVal();
    
    /**
     * Sets the sequenceName of this HibernateSequences. The sequenceName field
     * corresponds to the database column
     * szakdogadb.szakdogadb.hibernate_sequences.sequence_name.
     * 
     * @param sequenceName to set of this HibernateSequences
     * @return             this HibernateSequences instance
     */
    HibernateSequences setSequenceName(String sequenceName);
    
    /**
     * Sets the nextVal of this HibernateSequences. The nextVal field
     * corresponds to the database column
     * szakdogadb.szakdogadb.hibernate_sequences.next_val.
     * 
     * @param nextVal to set of this HibernateSequences
     * @return        this HibernateSequences instance
     */
    HibernateSequences setNextVal(Long nextVal);
    
    enum Identifier implements ColumnIdentifier<HibernateSequences> {
        
        SEQUENCE_NAME ("sequence_name"),
        NEXT_VAL      ("next_val");
        
        private final String columnId;
        private final TableIdentifier<HibernateSequences> tableIdentifier;
        
        Identifier(String columnId) {
            this.columnId        = columnId;
            this.tableIdentifier = TableIdentifier.of(    getDbmsId(), 
                getSchemaId(), 
                getTableId());
        }
        
        @Override
        public String getDbmsId() {
            return "szakdogadb";
        }
        
        @Override
        public String getSchemaId() {
            return "szakdogadb";
        }
        
        @Override
        public String getTableId() {
            return "hibernate_sequences";
        }
        
        @Override
        public String getColumnId() {
            return this.columnId;
        }
        
        @Override
        public TableIdentifier<HibernateSequences> asTableIdentifier() {
            return this.tableIdentifier;
        }
    }
}