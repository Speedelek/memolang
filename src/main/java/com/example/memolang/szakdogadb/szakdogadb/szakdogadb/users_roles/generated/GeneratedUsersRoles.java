package com.example.memolang.szakdogadb.szakdogadb.szakdogadb.users_roles.generated;

import com.example.memolang.szakdogadb.szakdogadb.szakdogadb.roles.Roles;
import com.example.memolang.szakdogadb.szakdogadb.szakdogadb.users.Users;
import com.example.memolang.szakdogadb.szakdogadb.szakdogadb.users_roles.UsersRoles;
import com.speedment.common.annotation.GeneratedCode;
import com.speedment.runtime.config.identifier.ColumnIdentifier;
import com.speedment.runtime.config.identifier.TableIdentifier;
import com.speedment.runtime.core.manager.Manager;
import com.speedment.runtime.field.LongForeignKeyField;
import com.speedment.runtime.typemapper.TypeMapper;

/**
 * The generated base for the {@link
 * com.example.memolang.szakdogadb.szakdogadb.szakdogadb.users_roles.UsersRoles}-interface
 * representing entities of the {@code users_roles}-table in the database.
 * <p>
 * This file has been automatically generated by Speedment. Any changes made to
 * it will be overwritten.
 * 
 * @author Speedment
 */
@GeneratedCode("Speedment")
public interface GeneratedUsersRoles {
    
    /**
     * This Field corresponds to the {@link UsersRoles} field that can be
     * obtained using the {@link UsersRoles#getUserId()} method.
     */
    LongForeignKeyField<UsersRoles, Long, Users> USER_ID = LongForeignKeyField.create(
        Identifier.USER_ID,
        UsersRoles::getUserId,
        UsersRoles::setUserId,
        Users.ID,
        TypeMapper.primitive(),
        false
    );
    /**
     * This Field corresponds to the {@link UsersRoles} field that can be
     * obtained using the {@link UsersRoles#getRoleId()} method.
     */
    LongForeignKeyField<UsersRoles, Long, Roles> ROLE_ID = LongForeignKeyField.create(
        Identifier.ROLE_ID,
        UsersRoles::getRoleId,
        UsersRoles::setRoleId,
        Roles.ID,
        TypeMapper.primitive(),
        false
    );
    
    /**
     * Returns the userId of this UsersRoles. The userId field corresponds to
     * the database column szakdogadb.szakdogadb.users_roles.user_id.
     * 
     * @return the userId of this UsersRoles
     */
    long getUserId();
    
    /**
     * Returns the roleId of this UsersRoles. The roleId field corresponds to
     * the database column szakdogadb.szakdogadb.users_roles.role_id.
     * 
     * @return the roleId of this UsersRoles
     */
    long getRoleId();
    
    /**
     * Sets the userId of this UsersRoles. The userId field corresponds to the
     * database column szakdogadb.szakdogadb.users_roles.user_id.
     * 
     * @param userId to set of this UsersRoles
     * @return       this UsersRoles instance
     */
    UsersRoles setUserId(long userId);
    
    /**
     * Sets the roleId of this UsersRoles. The roleId field corresponds to the
     * database column szakdogadb.szakdogadb.users_roles.role_id.
     * 
     * @param roleId to set of this UsersRoles
     * @return       this UsersRoles instance
     */
    UsersRoles setRoleId(long roleId);
    
    /**
     * Queries the specified manager for the referenced Users. If no such Users
     * exists, an {@code NullPointerException} will be thrown.
     * 
     * @param foreignManager the manager to query for the entity
     * @return               the foreign entity referenced
     */
    Users findUserId(Manager<Users> foreignManager);
    
    /**
     * Queries the specified manager for the referenced Roles. If no such Roles
     * exists, an {@code NullPointerException} will be thrown.
     * 
     * @param foreignManager the manager to query for the entity
     * @return               the foreign entity referenced
     */
    Roles findRoleId(Manager<Roles> foreignManager);
    
    enum Identifier implements ColumnIdentifier<UsersRoles> {
        
        USER_ID ("user_id"),
        ROLE_ID ("role_id");
        
        private final String columnId;
        private final TableIdentifier<UsersRoles> tableIdentifier;
        
        Identifier(String columnId) {
            this.columnId        = columnId;
            this.tableIdentifier = TableIdentifier.of(    getDbmsId(), 
                getSchemaId(), 
                getTableId());
        }
        
        @Override
        public String getDbmsId() {
            return "szakdogadb";
        }
        
        @Override
        public String getSchemaId() {
            return "szakdogadb";
        }
        
        @Override
        public String getTableId() {
            return "users_roles";
        }
        
        @Override
        public String getColumnId() {
            return this.columnId;
        }
        
        @Override
        public TableIdentifier<UsersRoles> asTableIdentifier() {
            return this.tableIdentifier;
        }
    }
}