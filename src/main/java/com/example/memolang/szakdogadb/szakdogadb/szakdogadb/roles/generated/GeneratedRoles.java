package com.example.memolang.szakdogadb.szakdogadb.szakdogadb.roles.generated;

import com.example.memolang.szakdogadb.szakdogadb.szakdogadb.roles.Roles;
import com.speedment.common.annotation.GeneratedCode;
import com.speedment.runtime.config.identifier.ColumnIdentifier;
import com.speedment.runtime.config.identifier.TableIdentifier;
import com.speedment.runtime.core.util.OptionalUtil;
import com.speedment.runtime.field.LongField;
import com.speedment.runtime.field.StringField;
import com.speedment.runtime.typemapper.TypeMapper;

import java.util.Optional;

/**
 * The generated base for the {@link
 * com.example.memolang.szakdogadb.szakdogadb.szakdogadb.roles.Roles}-interface
 * representing entities of the {@code roles}-table in the database.
 * <p>
 * This file has been automatically generated by Speedment. Any changes made to
 * it will be overwritten.
 * 
 * @author Speedment
 */
@GeneratedCode("Speedment")
public interface GeneratedRoles {
    
    /**
     * This Field corresponds to the {@link Roles} field that can be obtained
     * using the {@link Roles#getId()} method.
     */
    LongField<Roles, Long> ID = LongField.create(
        Identifier.ID,
        Roles::getId,
        Roles::setId,
        TypeMapper.primitive(),
        true
    );
    /**
     * This Field corresponds to the {@link Roles} field that can be obtained
     * using the {@link Roles#getRole()} method.
     */
    StringField<Roles, String> ROLE = StringField.create(
        Identifier.ROLE,
        o -> OptionalUtil.unwrap(o.getRole()),
        Roles::setRole,
        TypeMapper.identity(),
        false
    );
    
    /**
     * Returns the id of this Roles. The id field corresponds to the database
     * column szakdogadb.szakdogadb.roles.id.
     * 
     * @return the id of this Roles
     */
    long getId();
    
    /**
     * Returns the role of this Roles. The role field corresponds to the
     * database column szakdogadb.szakdogadb.roles.role.
     * 
     * @return the role of this Roles
     */
    Optional<String> getRole();
    
    /**
     * Sets the id of this Roles. The id field corresponds to the database
     * column szakdogadb.szakdogadb.roles.id.
     * 
     * @param id to set of this Roles
     * @return   this Roles instance
     */
    Roles setId(long id);
    
    /**
     * Sets the role of this Roles. The role field corresponds to the database
     * column szakdogadb.szakdogadb.roles.role.
     * 
     * @param role to set of this Roles
     * @return     this Roles instance
     */
    Roles setRole(String role);
    
    enum Identifier implements ColumnIdentifier<Roles> {
        
        ID   ("id"),
        ROLE ("role");
        
        private final String columnId;
        private final TableIdentifier<Roles> tableIdentifier;
        
        Identifier(String columnId) {
            this.columnId        = columnId;
            this.tableIdentifier = TableIdentifier.of(    getDbmsId(), 
                getSchemaId(), 
                getTableId());
        }
        
        @Override
        public String getDbmsId() {
            return "szakdogadb";
        }
        
        @Override
        public String getSchemaId() {
            return "szakdogadb";
        }
        
        @Override
        public String getTableId() {
            return "roles";
        }
        
        @Override
        public String getColumnId() {
            return this.columnId;
        }
        
        @Override
        public TableIdentifier<Roles> asTableIdentifier() {
            return this.tableIdentifier;
        }
    }
}